{"version":3,"file":"component---src-pages-decouvrir-js-c3e11821199481bf67a5.js","mappings":"iMAMe,SAASA,IACtB,IAAMC,GAAOC,EAAAA,EAAAA,gBAAe,aAU5B,OACE,gBAAC,IAAD,CAASC,GAAG,QAAQC,OAAK,GACvB,gBAAC,EAAAC,YAAD,KAAcJ,EAAKK,IAAIC,S,iGCbd,SAASC,IACtB,IAAMP,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gBAAC,IAAD,CAASC,GAAG,OAAOC,OAAK,GACtB,gBAAC,EAAAC,YAAD,KAAcJ,EAAKK,IAAIC,S,mECjBd,SAASE,EAAYC,EAAKC,EAAoBC,QAAe,IAAnCD,IAAAA,EAAa,YAAsB,IAAfC,IAAAA,EAAY,GAEvE,OAA0CC,EAAAA,EAAAA,WAAS,GAA5CC,EAAP,KAAuBC,EAAvB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUP,EAAIO,QAEdC,EAAW,IAAIC,sBACnB,YAAc,IAAZC,EAAW,KACNN,GAEHC,EAAgBK,EAAMN,kBAG1B,CACEH,WAAAA,EACAC,UAAAA,IAMJ,OAHIK,GACFC,EAASG,QAAQJ,GAEZ,WACLC,EAASI,UAAUL,MAEpB,CAACP,EAAKC,EAAYC,EAAWE,IAEzBA,I,yICrBHS,GAAgBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAV,iFAAGD,CAAH,4HAKb,SAACE,GAAD,OAAWA,EAAMC,MAAMC,GAAGxB,SAQ1B,SAACsB,GAAD,OAAWA,EAAMC,MAAMC,GAAGxB,SAK1ByB,EAAQL,EAAAA,QAAAA,GAAAA,WAAH,8DAAGA,CAAH,qGAGP,SAACE,GAAD,OAAWA,EAAMC,MAAMC,GAAGE,UAG1B,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,GAAGxB,SAKxB2B,EAAOP,EAAAA,QAAAA,KAAAA,WAAH,6DAAGA,CAAH,oBAGJQ,EAAQR,EAAAA,QAAAA,KAAAA,WAAH,8DAAGA,CAAH,8FAKP,SAACE,GAAD,OAAWA,EAAMC,MAAMC,GAAGE,UAG1B,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,GAAGxB,SAIf,SAAS6B,EAAKP,GAC3B,IAAMzB,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gBAACqB,EAAD,CAAeW,OAAK,EAACJ,QAAM,GACzB,gBAACD,EAAD,KACE,gBAACE,EAAD,KACE,2CADF,uBAGA,gBAACC,EAAD,KACE,sCADF,mBAIF,gBAAC,EAAA3B,YAAD,MAAeqB,EAAMzB,MAAQA,GAAMK,IAAIC,MACvC,gBAAC4B,EAAA,UAAD,CAAgBC,QAAM,GACpB,gBAACD,EAAA,EAAD,CAAQE,GAAI,4BAA6BC,QAAM,GAA/C,uCAGA,gBAACH,EAAA,EAAD,CACEG,QAAM,EACND,GAAG,wCACHE,QAAS,kBACPC,OAAOC,MACPD,OAAOC,KAAKC,KAAK,CACf,aACA,UACA,WACA,kBATN,uBAeA,gBAACP,EAAA,EAAD,CACEE,GAAG,IACHE,QAAS,kBACPC,OAAOC,MACPD,OAAOC,KAAKC,KAAK,CACf,aACA,UACA,WACA,kBARN,yB,wBCvFFC,EAAUnB,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,uKAEO,SAACE,GAAD,OAAYA,EAAMkB,OAAS,MAAQ,iBAKnD,SAAClB,GAAD,OAAWA,EAAMC,MAAMC,GAAGE,UAM9B,SAASe,EAAQnB,GACf,IAAMhB,GAAMoC,EAAAA,EAAAA,UACNC,GAAatC,EAAAA,EAAAA,GAAYC,EAAK,SAAU,GAC9C,OACE,gBAACe,EAAA,EAAD,CAASf,IAAKA,GACZ,gBAACiC,EAAD,CAASC,OAAQlB,EAAMkB,OAAQI,UAAWD,EAAa,WAAa,MACjErB,EAAMuB,WAMfJ,EAAQK,QAAU1B,EAAAA,QAAAA,IAAAA,WAAlB,4DAAkBA,CAAlB,iDAQAqB,EAAQM,MAAQ3B,EAAAA,QAAAA,IAAAA,WAAhB,0DAAgBA,CAAhB,0WAEW,SAACE,GAAD,OAAWA,EAAM0B,SAkBxB,SAAC1B,GAAD,OAAWA,EAAMC,MAAMC,GAAGE,UAM9B,QC1De,SAASuB,IACtB,IAAMpD,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gBAAC,EAAD,KACE,gBAAC,UAAD,KACE,gBAAC,EAAAG,YAAD,KAAcJ,EAAKqD,QAAQ/C,OAE7B,gBAAC,QAAD,CAAe6C,MAAM,WACnB,gBAAC,EAAAG,EAAD,CAAaC,IAAK,wBAAyBC,IAAI,UAA/C,wBChBR,IAAMlC,GAAgBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAV,8EAAGD,CAAH,2+BACN,SAACE,GAAD,OAAYA,EAAMqB,WAAa,EAAI,KACtB,SAACrB,GAAD,OAAYA,EAAMqB,WAAa,EAAI,SAGzD,SAACrB,GAAD,OAAWA,EAAMC,MAAMC,GAAGxB,SAwBb,SAACsB,GAAD,OAAYA,EAAMgC,oBAAsB,EAAI,KAW9C,SAASC,IACtB,IAAM1D,GAAOC,EAAAA,EAAAA,gBAAe,cAUtBQ,GAAMoC,EAAAA,EAAAA,UACNC,GAAatC,EAAAA,EAAAA,GAAYC,EAAK,SAAU,GACxCgD,GAAsBjD,EAAAA,EAAAA,GAAYC,GAExC,OACE,gBAAC,EAAD,CACEA,IAAKA,EACLqC,WAAYA,EACZW,oBAAqBA,EACrBtD,OAAK,GAEL,gBAAC,EAAAC,YAAD,KAAcJ,EAAKK,IAAIC,OC/Dd,SAASqD,IACtB,IAAM3D,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gBAAC,EAAD,CAAS0C,QAAM,GACb,gBAAC,UAAD,KACE,gBAAC,EAAAvC,YAAD,KAAcJ,EAAKqD,QAAQ/C,OAE7B,gBAAC,QAAD,CAAe6C,MAAM,WACnB,gBAAC,EAAAG,EAAD,CAAaC,IAAK,wBAAyBC,IAAI,WAA/C,sB,wBCbO,SAASI,IACtB,OACE,gBAACC,EAAA,EAAD,CAAKC,MAAO,gBACV,gBAAC,EAAD,MACA,gBAACV,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC7C,EAAA,EAAD,MACA,gBAACR,EAAA,EAAD,S","sources":["webpack://recosante-site/./src/components/About.js","webpack://recosante-site/./src/components/Data.js","webpack://recosante-site/./src/hooks/useOnScreen.js","webpack://recosante-site/./src/components/presentation/Introduction.js","webpack://recosante-site/./src/components/presentation/Wrapper.js","webpack://recosante-site/./src/components/presentation/Section1.js","webpack://recosante-site/./src/components/presentation/Section2.js","webpack://recosante-site/./src/components/presentation/Section3.js","webpack://recosante-site/./src/pages/decouvrir.js"],"sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport Section from 'components/base/Section'\n\nexport default function About() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"about\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  return (\n    <Section id='about' small>\n      <MDXRenderer>{data.mdx.body}</MDXRenderer>\n    </Section>\n  )\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport Section from 'components/base/Section'\n\nexport default function Data() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"data\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  return (\n    <Section id='data' small>\n      <MDXRenderer>{data.mdx.body}</MDXRenderer>\n    </Section>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nexport default function useOnScreen(ref, rootMargin = '0px', threshold = 1) {\n  // State and setter for storing whether element is visible\n  const [isIntersecting, setIntersecting] = useState(false)\n\n  useEffect(() => {\n    const current = ref.current\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (!isIntersecting) {\n          // Update our state when observer callback fires\n          setIntersecting(entry.isIntersecting)\n        }\n      },\n      {\n        rootMargin,\n        threshold,\n      }\n    )\n    if (current) {\n      observer.observe(current)\n    }\n    return () => {\n      observer.unobserve(current)\n    }\n  }, [ref, rootMargin, threshold, isIntersecting])\n\n  return isIntersecting\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport Section from 'components/base/Section'\nimport Button from 'components/base/Button'\n\nconst StyledSection = styled(Section)`\n  p {\n    font-size: 1.25rem;\n    text-align: center;\n\n    ${(props) => props.theme.mq.small} {\n      font-size: 1rem;\n      text-align: left;\n    }\n  }\n  h2 {\n    text-align: center;\n\n    ${(props) => props.theme.mq.small} {\n      text-align: left;\n    }\n  }\n`\nconst Title = styled.h1`\n  font-size: 3rem;\n  margin-bottom: 3rem;\n  ${(props) => props.theme.mq.medium} {\n    text-align: center;\n  }\n  ${(props) => props.theme.mq.small} {\n    font-size: 1.5rem;\n    text-align: left;\n  }\n`\nconst Left = styled.span`\n  display: block;\n`\nconst Right = styled.span`\n  display: block;\n  margin-bottom: 1rem;\n  text-align: right;\n\n  ${(props) => props.theme.mq.medium} {\n    text-align: inherit;\n  }\n  ${(props) => props.theme.mq.small} {\n    margin: 0;\n  }\n`\nexport default function What(props) {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"medecins-introduction\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  return (\n    <StyledSection first medium>\n      <Title>\n        <Left>\n          <strong>Connaître</strong> son environnement,\n        </Left>\n        <Right>\n          <strong>Agir</strong> pour sa santé\n        </Right>\n      </Title>\n      <MDXRenderer>{(props.data || data).mdx.body}</MDXRenderer>\n      <Button.Wrapper center>\n        <Button to={'/kit_de_communication.zip'} hollow>\n          Télecharger le kit de communication\n        </Button>\n        <Button\n          hollow\n          to='mailto:contact@recosante.beta.gouv.fr'\n          onClick={() =>\n            window._paq &&\n            window._paq.push([\n              'trackEvent',\n              'Doctors',\n              'Navigate',\n              'Appointment',\n            ])\n          }\n        >\n          Prendre rendez-vous\n        </Button>\n        <Button\n          to='/'\n          onClick={() =>\n            window._paq &&\n            window._paq.push([\n              'trackEvent',\n              'Doctors',\n              'Navigate',\n              'Appointment',\n            ])\n          }\n        >\n          Découvrir Recosanté\n        </Button>\n      </Button.Wrapper>\n    </StyledSection>\n  )\n}\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\n\nimport useOnScreen from 'hooks/useOnScreen'\nimport Section from 'components/base/Section'\n\nconst Columns = styled.div`\n  display: flex;\n  flex-direction: ${(props) => (props.invert ? 'row' : 'row-reverse')};\n  align-items: center;\n  margin-left: -1rem;\n  margin-right: -1rem;\n\n  ${(props) => props.theme.mq.medium} {\n    flex-direction: column-reverse;\n    align-items: center;\n    margin-bottom: 3rem;\n  }\n`\nfunction Wrapper(props) {\n  const ref = useRef()\n  const isOnScreen = useOnScreen(ref, '-200px', 0)\n  return (\n    <Section ref={ref}>\n      <Columns invert={props.invert} className={isOnScreen ? 'onScreen' : null}>\n        {props.children}\n      </Columns>\n    </Section>\n  )\n}\n\nWrapper.Content = styled.div`\n  flex: 1;\n  margin: 0 1rem;\n\n  p {\n    margin-bottom: 1rem;\n  }\n`\nWrapper.Image = styled.div`\n  position: relative;\n  width: ${(props) => props.width};\n  max-width: 90vw;\n  margin: 0 1rem;\n  border-radius: 1.5rem;\n  box-shadow: 1rem 1rem 4rem rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  opacity: 0;\n  transform: translateY(80%);\n  transition: opacity 600ms, transform 600ms ease-in-out;\n\n  .onScreen & {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  img {\n    border-radius: 1.5rem;\n  }\n\n  ${(props) => props.theme.mq.medium} {\n    margin-bottom: 2rem;\n    opacity: 1;\n    transform: translateY(0);\n  }\n`\nexport default Wrapper\n","import React from 'react'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport Wrapper from './Wrapper'\n\nexport default function Section1() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        content: mdx(slug: { eq: \"medecins-comment\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  return (\n    <Wrapper>\n      <Wrapper.Content>\n        <MDXRenderer>{data.content.body}</MDXRenderer>\n      </Wrapper.Content>\n      <Wrapper.Image width='35.5rem'>\n        <StaticImage src={'./images/section1.jpg'} alt='Comment' />\n      </Wrapper.Image>\n    </Wrapper>\n  )\n}\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport useOnScreen from 'hooks/useOnScreen'\nimport Section from 'components/base/Section'\n\nconst StyledSection = styled(Section)`\n  opacity: ${(props) => (props.isOnScreen ? 1 : 0)};\n  transform: translateY(${(props) => (props.isOnScreen ? 0 : '25%')});\n  transition: opacity 600ms, transform 900ms ease-out;\n\n  ${(props) => props.theme.mq.small} {\n    transform: none;\n    opacity: 1;\n  }\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n  li {\n    position: relative;\n    margin-bottom: 1.5rem;\n    padding-left: 3rem;\n    font-size: 1.125rem;\n    list-style: none;\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 0.25rem;\n      left: 0.5rem;\n      width: 2rem;\n      height: 2rem;\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19.9999 0C14.184 0 9.453 4.73102 9.453 10.5469C9.453 16.3627 14.184 21.0938 19.9999 21.0938C25.8157 21.0938 30.5468 16.3627 30.5468 10.5469C30.5468 4.73102 25.8157 0 19.9999 0Z\" fill=\"%23000091\"/><path d=\"M37.3812 31.1469C34.2284 26.417 28.9514 23.5938 23.2683 23.5938H16.7314C11.0483 23.5938 5.77144 26.417 2.61863 31.1469L2.42175 31.4421V40H37.578H37.5781V31.4421L37.3812 31.1469Z\" fill=\"%23000091\"/></svg>');\n      background-size: 2rem;\n      opacity: ${(props) => (props.animationIsOnScreen ? 1 : 0)};\n      transition: opacity 1000ms;\n    }\n\n    &:nth-child(2) {\n      &:before {\n        transition-delay: 300ms;\n      }\n    }\n  }\n`\nexport default function Who() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"medecins-pour-qui\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  const ref = useRef()\n  const isOnScreen = useOnScreen(ref, '-100px', 0)\n  const animationIsOnScreen = useOnScreen(ref)\n\n  return (\n    <StyledSection\n      ref={ref}\n      isOnScreen={isOnScreen}\n      animationIsOnScreen={animationIsOnScreen}\n      small\n    >\n      <MDXRenderer>{data.mdx.body}</MDXRenderer>\n    </StyledSection>\n  )\n}\n","import React from 'react'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport Wrapper from './Wrapper'\n\nexport default function Why() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        content: mdx(slug: { eq: \"medecins-naissance\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  return (\n    <Wrapper invert>\n      <Wrapper.Content>\n        <MDXRenderer>{data.content.body}</MDXRenderer>\n      </Wrapper.Content>\n      <Wrapper.Image width='35.5rem'>\n        <StaticImage src={'./images/section3.jpg'} alt='Pourquoi' />\n      </Wrapper.Image>\n    </Wrapper>\n  )\n}\n","import React from 'react'\n\nimport Web from 'components/layout/Web'\n\nimport Introduction from 'components/presentation/Introduction'\nimport Section1 from 'components/presentation/Section1'\nimport Section2 from 'components/presentation/Section2'\nimport Section3 from 'components/presentation/Section3'\nimport Data from 'components/Data'\nimport About from 'components/About'\n\nexport default function presentation() {\n  return (\n    <Web title={'Présentation'}>\n      <Introduction />\n      <Section1 />\n      <Section2 />\n      <Section3 />\n      <Data />\n      <About />\n    </Web>\n  )\n}\n"],"names":["About","data","useStaticQuery","id","small","MDXRenderer","mdx","body","Data","useOnScreen","ref","rootMargin","threshold","useState","isIntersecting","setIntersecting","useEffect","current","observer","IntersectionObserver","entry","observe","unobserve","StyledSection","styled","Section","props","theme","mq","Title","medium","Left","Right","What","first","Button","center","to","hollow","onClick","window","_paq","push","Columns","invert","Wrapper","useRef","isOnScreen","className","children","Content","Image","width","Section1","content","S","src","alt","animationIsOnScreen","Who","Why","presentation","Web","title"],"sourceRoot":""}