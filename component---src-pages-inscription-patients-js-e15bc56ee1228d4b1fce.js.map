{"version":3,"file":"component---src-pages-inscription-patients-js-e15bc56ee1228d4b1fce.js","mappings":"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","sources":["webpack://recosante-site/./src/components/base/TextInputWithLabel.js","webpack://recosante-site/./src/components/base/TextArea.js","webpack://recosante-site/./src/components/Referral.js","webpack://recosante-site/./src/pages/inscription-patients.js","webpack://recosante-site/./src/utils/api.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport TextInput from 'components/base/TextInput'\n\nconst Wrapper = styled.div`\n  margin-bottom: 1rem;\n`\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  color: ${(props) => props.theme.colors[props.error ? 'error' : 'text']};\n`\nexport default function TextInputWithLabel(props) {\n  return (\n    <Wrapper className={props.className}>\n      {props.label && (\n        <Label htmlFor={props.name} error={props.error}>\n          {props.label}\n        </Label>\n      )}\n      <TextInput\n        type={props.type}\n        name={props.name}\n        value={props.value}\n        error={props.error}\n        onChange={props.onChange}\n      />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  margin-bottom: 1.5rem;\n`\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  color: ${(props) => props.theme.colors[props.error ? 'error' : 'text']};\n`\nconst Subtitle = styled.p`\n  margin-bottom: 1rem;\n  font-size: 0.875rem;\n  opacity: 0.7;\n`\nconst Input = styled.textarea`\n  width: 100%;\n  padding: 0.5em 0.75em;\n  background-color: ${(props) => props.theme.colors.input};\n  box-shadow: inset 0 -2px 0 0 ${(props) => props.theme.colors[props.error ? 'error' : 'main']};\n  border: none;\n  resize: vertical;\n  border-radius: 0.25rem 0.25rem 0 0;\n`\nexport default function TextArea(props) {\n  return (\n    <Wrapper>\n      {props.label && (\n        <Label htmlFor={props.name} error={props.error}>\n          {props.label}\n        </Label>\n      )}\n      {props.subtitle && <Subtitle>{props.subtitle}</Subtitle>}\n      <Input\n        rows='3'\n        id={props.name}\n        name={props.name}\n        value={props.value}\n        error={props.error}\n        onChange={(e) => {\n          props.onChange({ value: e.currentTarget.value, name: props.name })\n        }}\n      />\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { useInscriptionPatients } from 'utils/api'\nimport TextInputWithLabel from 'components/base/TextInputWithLabel'\nimport TextArea from 'components/base/TextArea'\nimport Button from 'components/base/Button'\nimport Alert from 'components/base/Alert'\n\nconst Wrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n`\nconst Submit = styled(Button)`\n  align-self: flex-end;\n`\nexport default function Referral() {\n  const [user, setUser] = useState('')\n  const [patients, setPatients] = useState('')\n\n  const mutation = useInscriptionPatients()\n\n  const [error, setError] = useState(false)\n\n  return (\n    <Wrapper\n      onSubmit={(e) => {\n        e.preventDefault()\n        if (!user || !patients) {\n          setError(true)\n        } else {\n          setError(false)\n          mutation.mutate(user, patients.replaceAll(', ', ',').split(','))\n\n          window._paq &&\n            window._paq.push(['trackEvent', 'Doctors', 'Mail', user])\n        }\n      }}\n    >\n      <TextInputWithLabel\n        label='Votre nom et fonction'\n        name='name'\n        value={user.name}\n        error={error && !user.name}\n        onChange={({ value }) => setUser(value)}\n      />\n      <TextArea\n        label='Les emails des patient·e·s que vous souhaitez inscrire'\n        subtitle='Entrez un ou plusieurs email(s) séparés par des virgules (,).'\n        name='patients'\n        value={user.patients}\n        error={error && !user.patients}\n        onChange={({ value }) => setPatients(value)}\n      />\n      <Submit>Envoyer</Submit>\n      {error && <Alert error>Merci de remplir tous les champs</Alert>}\n      {mutation.isError && (\n        <Alert error>\n          Une erreur est survenue. Une ou plusieurs invitations n'ont pas pu\n          être envoyé.\n        </Alert>\n      )}\n      {mutation.isSuccess && <Alert>Les invitations ont été envoyées</Alert>}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport Web from 'components/layout/Web'\nimport Section from 'components/base/Section'\nimport Referral from 'components/Referral'\n\nconst StyledSection = styled(Section)`\n  font-size: 1.125rem;\n`\nexport default function InscriptionPatients() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"inscription-patients\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  return (\n    <Web title={'Recommander Recosanté'}>\n      <StyledSection small first>\n        <MDXRenderer>{data.mdx.body}</MDXRenderer>\n        <Referral />\n      </StyledSection>\n    </Web>\n  )\n}\n","import { useQuery, useMutation } from 'react-query'\nimport axios from 'axios'\nimport { useQueryParam } from 'use-query-params'\n\nimport apiUrl from 'utils/apiUrl'\n\nexport function useStatistiques() {\n  return useQuery(['statistiques'], () =>\n    axios.get(`${apiUrl}/stats/`).then((res) => res.data)\n  )\n}\nexport function useAvis(location) {\n  const [short_id] = useQueryParam('short_id')\n  const [appliquee] = useQueryParam('avis')\n  return useQuery(\n    ['profile', short_id, appliquee],\n    () =>\n      axios\n        .post(\n          `${apiUrl}/newsletter/${short_id}/avis?appliquee=${appliquee}`,\n          null,\n          {\n            headers: { Accept: ' application/json' },\n          }\n        )\n        .then((res) => res.data),\n    {\n      enabled: short_id && appliquee ? true : false,\n      refetchOnWindowFocus: false,\n    }\n  )\n}\nexport function useAvisMutation() {\n  const [short_id] = useQueryParam('short_id')\n  const [appliquee] = useQueryParam('avis')\n  return useMutation((avis) =>\n    axios.post(\n      `${apiUrl}/newsletter/${short_id}/avis?appliquee=${appliquee}`,\n      avis,\n      {\n        headers: {\n          Accept: ' application/json',\n          'Content-Type': 'application/json',\n        },\n      }\n    )\n  )\n}\nexport function useInscriptionPatients() {\n  return useMutation((nom_medecin, mails) =>\n    axios.post(\n      `${apiUrl}/inscription-patients`,\n      { nom_medecin, mails },\n      {\n        headers: {\n          Accept: ' application/json',\n          'Content-Type': 'application/json',\n        },\n      }\n    )\n  )\n}\n"],"names":["Wrapper","styled","Label","props","theme","colors","error","TextInputWithLabel","className","label","htmlFor","name","TextInput","type","value","onChange","Subtitle","Input","input","TextArea","subtitle","rows","id","e","currentTarget","Submit","Button","Referral","useState","user","setUser","patients","setPatients","mutation","useInscriptionPatients","setError","onSubmit","preventDefault","mutate","replaceAll","split","window","_paq","push","Alert","isError","isSuccess","StyledSection","Section","InscriptionPatients","data","useStaticQuery","Web","title","small","first","MDXRenderer","mdx","body","useAvis","location","short_id","useQueryParam","appliquee","useQuery","axios","apiUrl","headers","Accept","then","res","enabled","refetchOnWindowFocus","useMutation","nom_medecin","mails"],"sourceRoot":""}