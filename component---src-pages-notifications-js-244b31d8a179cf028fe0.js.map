{"version":3,"file":"component---src-pages-notifications-js-244b31d8a179cf028fe0.js","mappings":"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","sources":["webpack://recosante-site/./src/components/misc/unloggedForm/MailInput.js","webpack://recosante-site/./src/components/misc/UnloggedForm.js","webpack://recosante-site/./src/components/Notifications.js","webpack://recosante-site/./src/pages/notifications.js"],"sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport TextInput from 'components/base/TextInput'\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin-bottom: 1.5rem;\n  font-size: 1.375rem;\n\n  ${(props) => props.theme.mq.small} {\n    font-size: 1rem;\n  }\n`\nconst Label = styled.label`\n  position: absolute;\n  display: block;\n  padding: 0.5em 0.75em;\n  transform: translateY(${(props) => (props.small ? '-100%' : 0)});\n  font-size: ${(props) => (props.small ? '0.6em' : '1em')};\n  opacity: ${(props) => (props.small ? '1' : '0.7')};\n  pointer-events: ${(props) => (props.small ? 'inherit' : 'none')};\n  transition: all 200ms ease-out;\n`\nconst Input = styled(TextInput)`\n  margin: 0;\n\n  ${(props) => props.theme.mq.small} {\n    background-color: ${(props) => props.theme.colors.background};\n  }\n`\nexport default function MailInput(props) {\n  const [focus, setFocus] = useState(false)\n\n  return (\n    <Wrapper className={props.className}>\n      {props.label && (\n        <Label htmlFor={props.name} small={focus || props.value}>\n          {props.label}\n        </Label>\n      )}\n      <Input\n        type={'email'}\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        onFocus={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n        required\n      />\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { useSendProfileLink } from 'hooks/useUser'\nimport Button from 'components/base/Button'\nimport Alert from 'components/base/Alert'\nimport MailInput from './unloggedForm/MailInput'\n\nconst Wrapper = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  max-width: 35.5rem;\n  margin: 0 auto;\n  padding-top: 1.5rem;\n`\nconst Submit = styled(Button)`\n  align-self: flex-end;\n  font-size: 1.25rem;\n\n  ${(props) => props.theme.mq.small} {\n    font-size: 1.125rem;\n  }\n`\nconst Text = styled.p``\nexport default function UnloggedForm(props) {\n  const mutation = useSendProfileLink()\n\n  const [mail, setMail] = useState('')\n  return (\n    <Wrapper\n      modal={props.modal}\n      onSubmit={(e) => {\n        e.preventDefault()\n        mutation.mutate(mail)\n      }}\n    >\n      {props.unauthorized && <Text>Le délai pour utiliser ce lien a expiré.</Text>}\n      <Text>\n        Entrez votre adresse email pour recevoir un lien vous permettant de\n        changer vos préférences\n      </Text>\n      <MailInput\n        type='email'\n        name='email'\n        label='Votre email'\n        value={mail}\n        onChange={({ value }) => setMail(value)}\n      />\n\n      <Submit>Recevoir le lien</Submit>\n      {mutation.isError && <Alert error>Une erreur est survenue</Alert>}\n      {mutation.isSuccess && (\n        <Alert>\n          Vous avez reçu un email contenant un lien pour modifier vos\n          préférences\n        </Alert>\n      )}\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { useQueryParam } from 'use-query-params'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { useUser, useUserMutation } from 'hooks/useUser'\nimport useNotificationsPrompt from 'hooks/useNotificationsPrompt'\nimport useIos from 'hooks/useIos'\nimport Section from 'components/base/Section'\nimport Button from 'components/base/Button'\nimport Alert from 'components/base/Alert'\nimport UnloggedForm from 'components/misc/UnloggedForm'\n\nexport default function Notifications() {\n  const ios = useIos()\n\n  const { applicationServerKey } = useStaticQuery(\n    graphql`\n      query {\n        applicationServerKey {\n          application_server_key\n        }\n      }\n    `\n  )\n  const notifications = useNotificationsPrompt(\n    '/sw.js',\n    applicationServerKey.application_server_key\n  )\n\n  const [user] = useQueryParam('user')\n  const [token] = useQueryParam('token')\n  const { error, data }  = useUser()\n  const mutation = useUserMutation()\n  const [success, setSuccess] = useState(false)\n\n  return user && token && !error ? (\n    <Section first small>\n      <h1>\n        Activer les <strong>notifications</strong>\n        <br />\n        sur cet appareil\n      </h1>\n      {data && (\n        <>\n          {data.indicateurs_media[0] === 'mail' ? (\n            <>\n              <p>\n                Vous recevez pour l'instant les{' '}\n                <strong>indicateurs par mail</strong>.\n              </p>\n              {ios ? (\n                <p>\n                  Malheureusement les notifications ne sont pas disponibles sur\n                  iOS (iPhone et iPad). Vous pouvez ouvrir cette page sur un\n                  autre appareil si vous le souhaitez.\n                </p>\n              ) : (\n                <p>\n                  Si vous souhaitez changer pour activer les notifications sur\n                  cet appareil, cliquez ci-dessous (vous ne recevrez plus de\n                  mail).\n                </p>\n              )}\n            </>\n          ) : success ? (\n            <p>\n              Vous recevrez maintenant les{' '}\n              <strong>indicateurs par notifications</strong> sur cet appareil !\n            </p>\n          ) : (\n            <>\n              <p>\n                Vous recevez pour l'instant les{' '}\n                <strong>indicateurs par notifications.</strong>\n              </p>\n              {ios ? (\n                <p>\n                  Malheureusement les notifications ne sont pas disponibles sur\n                  iOS (iPhone et iPad). Vous pouvez ouvrir cette page sur un\n                  autre appareil ou modifier votre profil pour choisir de les\n                  recevoir par mail.\n                </p>\n              ) : (\n                <p>\n                  Si vous souhaitez les recevoir sur cet appareil en\n                  particulier, cliquez ci-dessous (vous continuerez de les\n                  recevoir sur vos autres appareils)\n                </p>\n              )}\n            </>\n          )}\n          <Button.Wrapper vertical>\n            {!success && !ios && (\n              <Button\n                fetching={notifications.prompting}\n                onClick={() => {\n                  notifications.subscribe().then((pushSubscription) => {\n                    if (pushSubscription) {\n                      setSuccess(true)\n                      mutation.mutate({\n                        indicateurs_media: ['notifications_web'],\n                        webpush_subscriptions_info:\n                          JSON.stringify(pushSubscription),\n                      })\n                    }\n                  })\n                }}\n              >\n                Activer les notifications sur cet appareil\n              </Button>\n            )}\n            <Button to={`/profil/?user=${user}&token=${token}`} hollow>\n              Voir mon profil\n            </Button>\n          </Button.Wrapper>\n        </>\n      )}\n      {notifications.error && (\n        <Alert error>\n          Vous devez accepter les notifications web pour pouvoir continuer\n        </Alert>\n      )}\n      {mutation.isError && (\n        <Alert error>\n          Une erreur est survenue. Vos préférences n'ont pas été mises à jour\n        </Alert>\n      )}\n    </Section>\n  ) : (\n    <Section first>\n      <UnloggedForm unauthorized={!!error} />\n    </Section>\n  )\n}\n","import React from 'react'\n\nimport Web from 'components/layout/Web'\nimport Notifications from 'components/Notifications'\n\nexport default function notifications() {\n  return (\n    <Web title={`Notifications Web`}>\n      <Notifications />\n    </Web>\n  )\n}\n"],"names":["Wrapper","styled","props","theme","mq","small","Label","Input","TextInput","colors","background","MailInput","useState","focus","setFocus","className","label","htmlFor","name","value","type","onChange","onFocus","onBlur","required","Submit","Button","Text","UnloggedForm","mutation","useSendProfileLink","mail","setMail","modal","onSubmit","e","preventDefault","mutate","unauthorized","isError","Alert","error","isSuccess","Notifications","ios","useIos","applicationServerKey","useStaticQuery","notifications","useNotificationsPrompt","application_server_key","user","useQueryParam","token","useUser","data","useUserMutation","success","setSuccess","Section","first","indicateurs_media","vertical","fetching","prompting","onClick","subscribe","then","pushSubscription","webpush_subscriptions_info","JSON","stringify","to","hollow","Web","title"],"sourceRoot":""}