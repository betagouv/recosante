{"version":3,"file":"component---src-pages-uv-js-192ec02fe2b513dcfbea.js","mappings":"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","sources":["webpack://recosante-site/./src/components/newsletter/Mockup.js","webpack://recosante-site/./src/components/newsletter/Notifications.js","webpack://recosante-site/./src/components/Newsletter.js","webpack://recosante-site/./src/hooks/useOnScreen.js","webpack://recosante-site/./src/components/AboutUv.js","webpack://recosante-site/./src/pages/uv.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  z-index: -1;\n  pointer-events: none;\n  top: 50%;\n  left: calc(50%);\n  transform: translate(-50%, -50%);\n  width: 80rem;\n\n  ${(props) => props.theme.mq.small} {\n    width: 175vw;\n  }\n`\nconst Background = styled.div`\n  opacity: ${(props) => (props.isOnScreen ? 1 : 0)};\n  transform: translateY(${(props) => (props.isOnScreen ? 0 : '9rem')});\n  transition: transform 600ms ease-out, opacity 600ms;\n\n  ${(props) => props.theme.mq.small} {\n    transform: none;\n    opacity: 1;\n  }\n`\nconst Tablet = styled.div`\n  position: absolute !important;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transform: translateY(${(props) => (props.isOnScreen ? 0 : '12rem')});\n  opacity: ${(props) => (props.isOnScreen ? 1 : 0)};\n  transition: transform 600ms ease-out, opacity 600ms;\n\n  ${(props) => props.theme.mq.small} {\n    transform: none;\n    opacity: 1;\n  }\n`\nexport default function Mockup(props) {\n  return (\n    <>\n      <Wrapper className={props.className}>\n        <Background isOnScreen={props.isOnScreen}>\n          <StaticImage\n            src={'./mockup/background.jpg'}\n            alt='Ombre'\n            placeholder='none'\n          />\n        </Background>\n        <Tablet isOnScreen={props.isOnScreen}>\n          {props.type === 'baignades' ? (\n            <StaticImage\n              src='./mockup/tablet-baignades.png'\n              alt='Tablette'\n              placeholder='none'\n            />\n          ) : (props.type === 'uv' ? (\n            <StaticImage\n              src='./mockup/tablet-uv.png'\n              alt='Tablette'\n              placeholder='none'\n            />\n          ) : (props.type === 'qa' ? (\n              <StaticImage\n                src='./mockup/tablet-qa.png'\n                alt='Tablette'\n                placeholder='none'\n              />\n          ) : (\n            <StaticImage\n              src='./mockup/tablet.png'\n              alt='Tablette'\n              placeholder='none'\n            />\n          )))}\n        </Tablet>\n      </Wrapper>\n    </>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport ModalContext from 'utils/ModalContext'\nimport { useLocalUser } from 'hooks/useUser'\nimport Button from 'components/base/Button'\nimport Section from 'components/base/Section'\nimport Images from './notifications/Images'\n\nimport useOnScreen from 'hooks/useOnScreen'\n\nconst StyledSection = styled(Section)`\n  display: flex;\n  width: 60.5rem;\n\n  ${(props) => props.theme.mq.medium} {\n    flex-direction: column-reverse;\n    align-items: center;\n  }\n`\nconst Content = styled.div`\n  width: 29.25rem;\n  margin-left: 2rem;\n\n  ${(props) => props.theme.mq.medium} {\n    width: 31rem;\n    margin: 0 0 2rem;\n  }\n  ${(props) => props.theme.mq.small} {\n    width: auto;\n    margin: 0 0 1rem;\n  }\n  p {\n    margin-bottom: 1em;\n  }\n`\nconst MockupWrapper = styled.div`\n  flex: 1;\n  position: relative;\n\n  ${(props) => props.theme.mq.medium} {\n    min-height: 14rem;\n  }\n\n  ${(props) => props.theme.mq.small} {\n    min-height: auto;\n  }\n`\nconst StyledButton = styled(Button)`\n  font-size: 1.125rem;\n\n  ${(props) => props.theme.mq.small} {\n    font-size: 1rem;\n  }\n`\nexport default function Notifications() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"introduction-notifications\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  const { setSubscription } = useContext(ModalContext)\n  const { mutateUser } = useLocalUser()\n\n  const ref = useRef()\n  const isOnScreen = useOnScreen(ref)\n\n  return (\n    <StyledSection ref={ref} id='notifications'>\n      <MockupWrapper>\n        <Images isOnScreen={isOnScreen} />\n      </MockupWrapper>\n      <Content>\n        <MDXRenderer>{data.mdx.body}</MDXRenderer>\n        <Button.Wrapper right>\n          <StyledButton\n            onClick={() => {\n              mutateUser({\n                indicateurs: ['indice_atmo', 'raep'],\n              })\n              setSubscription('indicators')\n              window?._paq?.push([\n                'trackEvent',\n                'Subscription',\n                'Indicateur',\n                'Tous',\n              ])\n            }}\n            hollow\n          >\n            Choisir mes indicateurs\n          </StyledButton>\n        </Button.Wrapper>\n      </Content>\n    </StyledSection>\n  )\n}\n","import React, { useEffect, useContext, useRef } from 'react'\nimport styled from 'styled-components'\nimport { navigate } from 'gatsby'\nimport { useLocation } from '@reach/router'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport ModalContext from 'utils/ModalContext'\nimport { useLocalUser } from 'hooks/useUser'\nimport useOnScreen from 'hooks/useOnScreen'\nimport Section from 'components/base/Section'\nimport Button from 'components/base/Button'\nimport Mockup from './newsletter/Mockup'\nimport Notifications from './newsletter/Notifications'\n\nconst StyledSection = styled(Section)`\n  display: flex;\n\n  ${(props) => props.theme.mq.medium} {\n    flex-direction: column;\n  }\n`\nconst Content = styled.div`\n  width: 41.75rem;\n  margin-right: 2rem;\n\n  ${(props) => props.theme.mq.medium} {\n    width: auto;\n    margin: 0 0 2rem;\n  }\n  ${(props) => props.theme.mq.small} {\n    margin: 0 0 1rem;\n  }\n\n  h1 {\n    font-size: ${(props) => (props.seo ? 2 : 4)}rem;\n\n    ${(props) => props.theme.mq.small} {\n      font-size: 1.5rem;\n    }\n  }\n  h2 {\n    margin-bottom: 2rem;\n    font-size: 4rem;\n\n    ${(props) => props.theme.mq.small} {\n      margin-bottom: 1.5rem;\n      font-size: 2rem;\n    }\n  }\n  p {\n    max-width: 35.5rem;\n    margin-bottom: 1em;\n    font-size: 1.25rem;\n\n    ${(props) => props.theme.mq.medium} {\n      max-width: none;\n    }\n\n    ${(props) => props.theme.mq.small} {\n      font-size: 1rem;\n    }\n  }\n`\nconst StyledButton = styled(Button)`\n  font-size: 1.25rem;\n`\nconst MockupWrapper = styled.div`\n  flex: 1;\n  position: relative;\n\n  ${(props) => props.theme.mq.medium} {\n    min-height: 40rem;\n    overflow: hidden;\n    margin: -3rem 0;\n  }\n  ${(props) => props.theme.mq.small} {\n    min-height: 100vw;\n    overflow: hidden;\n    margin: -10vw 0;\n  }\n`\nexport default function Newsletter(props) {\n  const { setSubscription } = useContext(ModalContext)\n  const { mutateUser } = useLocalUser()\n\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"introduction\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  const ref = useRef()\n\n  const isOnScreen = useOnScreen(ref, '0px', 0.7)\n\n  const location = useLocation()\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const indicateurs = params.getAll('indicateur').filter(i => ['indice_atmo', 'raep', 'vigilance_meteo', 'indice_uv'].includes(i));\n    if (indicateurs.length > 0) {\n      mutateUser({\n        indicateurs: indicateurs,\n      })\n      setSubscription('indicators')\n      params.delete('indicateur')\n      navigate(`${location.pathname}${Array.from(params).length > 0 ? '?' + params.toString() : ''}`, { replace: true })\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <StyledSection first={props.first} id='newsletter'>\n        <Content ref={ref} seo={props.seo}>\n          <MDXRenderer>{(props.data || data).mdx.body}</MDXRenderer>\n          <Button.Wrapper>\n            {props.type === 'baignades' ? (\n              <StyledButton to='/'>\n                Consulter la qualité de l’eau de baignade\n              </StyledButton>\n            ) : (\n              <StyledButton\n                onClick={() => {\n                  mutateUser({\n                    indicateurs: props.indicateurs || ['indice_atmo', 'raep'],\n                  })\n                  setSubscription('indicators')\n                  window?._paq?.push(['trackEvent', 'Subscription', 'Infolettre'])\n                }}\n              >\n                M'abonner à Recosanté\n              </StyledButton>)}\n          </Button.Wrapper>\n        </Content>\n        <MockupWrapper>\n          <Mockup type={props.type} isOnScreen={isOnScreen} />\n        </MockupWrapper>\n      </StyledSection>\n      {(props.type !== 'qa' && props.type !== 'uv' && props.type !== 'baignades') && <Notifications />}\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nexport default function useOnScreen(ref, rootMargin = '0px', threshold = 1) {\n  // State and setter for storing whether element is visible\n  const [isIntersecting, setIntersecting] = useState(false)\n\n  useEffect(() => {\n    const current = ref.current\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (!isIntersecting) {\n          // Update our state when observer callback fires\n          setIntersecting(entry.isIntersecting)\n        }\n      },\n      {\n        rootMargin,\n        threshold,\n      }\n    )\n    if (current) {\n      observer.observe(current)\n    }\n    return () => {\n      observer.unobserve(current)\n    }\n  }, [ref, rootMargin, threshold, isIntersecting])\n\n  return isIntersecting\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport Section from 'components/base/Section'\nimport Button from 'components/base/Button'\n\nconst StyledButton = styled(Button)`\n  font-size: 1.25rem;\n`\n\nexport default function AboutUv() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"about-uv\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  return (\n    <Section id='about-uv' small>\n      <MDXRenderer>{data.mdx.body}</MDXRenderer>\n      <Button.Wrapper center>\n        <StyledButton hollow to='/'>\n          Consulter l’indice UV de ma commune\n        </StyledButton>\n      </Button.Wrapper>\n    </Section>\n  )\n}","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Web from 'components/layout/Web'\nimport Newsletter from '../components/Newsletter'\nimport AboutUv from 'components/AboutUv'\n\nexport default function Uv() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"introduction-uv\" }) {\n          body\n        }\n      }\n    `\n  )\n\n  return (\n    <Web title={`UV`}>\n      <Newsletter first data={data} type={'uv'} indicateurs={['indice_uv']} seo />\n      <AboutUv />\n    </Web>\n  )\n}"],"names":["Wrapper","styled","props","theme","mq","small","Background","isOnScreen","Tablet","Mockup","className","S","src","alt","placeholder","type","StyledSection","Section","medium","Content","MockupWrapper","StyledButton","Button","Notifications","data","useStaticQuery","setSubscription","useContext","ModalContext","mutateUser","useLocalUser","ref","useRef","useOnScreen","id","Images","MDXRenderer","mdx","body","right","onClick","indicateurs","window","_paq","push","hollow","seo","Newsletter","location","useLocation","useEffect","params","URLSearchParams","search","getAll","filter","i","includes","length","delete","navigate","pathname","Array","from","toString","replace","first","to","rootMargin","threshold","useState","isIntersecting","setIntersecting","current","observer","IntersectionObserver","entry","observe","unobserve","AboutUv","center","Uv","Web","title"],"sourceRoot":""}