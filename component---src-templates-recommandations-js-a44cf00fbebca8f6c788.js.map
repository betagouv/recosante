{"version":3,"file":"component---src-templates-recommandations-js-a44cf00fbebca8f6c788.js","mappings":"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","sources":["webpack://recosante-site/./src/components/Recommandations.js","webpack://recosante-site/./src/hooks/useRecommandations.js","webpack://recosante-site/./src/templates/recommandations.js"],"sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport useRecommandations from 'hooks/useRecommandations'\nimport Option from 'components/subscription/question/Option'\nimport IndiceAtmo from 'utils/icons/IndiceAtmo'\nimport Raep from 'utils/icons/Raep'\nimport IndiceUv from 'utils/icons/IndiceUv'\nimport VigilanceMeteo from 'utils/icons/VigilanceMeteo'\n\nconst Options = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  margin: 2rem auto;\n\n  ${(props) => props.theme.mq.small} {\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n  }\n`\nconst NoIcon = styled.svg`\n  width: auto;\n  height: 0rem;\n`\nconst Type = styled.h2`\n  margin-bottom: 2rem;\n`\nconst Critere = styled.h3`\n  margin-bottom: 1.5rem;\n`\nconst SousCritere = styled.h4`\n  margin-bottom: 1rem;\n  color: ${(props) => props.theme.colors.text};\n`\nconst Recommandation = styled.div`\n  margin-bottom: 1rem;\n  &:not(:last-child):after {\n    content: \" \";\n    display: block;\n    border-bottom: 2px solid transparent;\n    border-image: linear-gradient(to right, #fff 0 25%, ${(props) => props.theme.colors.main}, #fff 75% 100%);\n    border-image-slice: 1;\n  }\n`\n\nexport default function Recommandations(props) {\n  const types = {\n    \"episode_pollution\": \"Épisode de pollution\",\n    \"indice_atmo\": \"Qualité de l’air\",\n    \"pollens\": \"Risque d’allergie aux pollens\",\n    \"vigilance_meteo\": \"Vigilance météo\",\n    \"indice_uv\": \"Indice UV\",\n    \"baignades\": \"Qualité des eaux de baignade\",\n    \"radon\": \"Potentiel Radon\"\n  }\n  let options = []\n  Object.keys(types).map((t) => (\n    options.push({\n      value: t,\n      label: types[t],\n      icon: (t === 'indice_atmo') ? <IndiceAtmo /> : (t === 'pollens') ? <Raep /> : (t === 'vigilance_meteo') ? <VigilanceMeteo /> : (t === 'indice_uv') ? <IndiceUv /> : <NoIcon />\n    })\n  ))\n  const { data } = useRecommandations()\n  const groupBy = (objectArray, property) => {\n    return objectArray.reduce((acc, obj) => {\n      const key = obj[property];\n      acc[key] ??= [];\n      acc[key].push(obj);\n      return acc;\n    }, {});\n  }\n  let recommandations = {}\n  const recommandationsByType = groupBy(data || props.recommandations, 'type')\n  const recommandationsOzone = (ozone) => recommandationsByType[\"episode_pollution\"]?.filter(r => r.ozone === ozone)\n  recommandations[\"episode_pollution\"] = {\n    \"ozone\": recommandationsOzone(true),\n    \"pas_ozone\": recommandationsOzone(false)\n  }\n  const compareCategories = (c1, c2) => (c1.categorie < c2.categorie ? 1 : -1);\n  const recommandationsQa = (qa) => recommandationsByType[\"indice_atmo\"]?.filter(r => r[qa] === true).sort(compareCategories);\n  recommandations[\"indice_atmo\"] = {\n    \"qa_bonne\": recommandationsQa(\"qa_bonne\"),\n    \"qa_mauvaise\": recommandationsQa(\"qa_mauvaise\"),\n    \"qa_evenement\": recommandationsQa(\"qa_evenement\"),\n  }\n  const recommandationsMinRaep= (min_raep) => recommandationsByType[\"pollens\"]?.filter(r => r.min_raep === min_raep);\n  recommandations[\"pollens\"] = {\n    \"raep_0\": recommandationsMinRaep(0),\n    \"raep_1-3\": recommandationsMinRaep(1),\n    \"raep_4-5\": recommandationsMinRaep(4)\n  }\n  const comparePhenomenes = (p1, p2) => (p1.vigilance_phenomene_ids > p2.vigilance_phenomene_ids ? 1 : -1);\n  const recommandationsVigilanceCouleur = (vigilance_couleur_id) => recommandationsByType[\"vigilance_meteo\"]?.filter(r => r.vigilance_couleur_ids?.includes(vigilance_couleur_id)).sort(comparePhenomenes);\n  recommandations[\"vigilance_meteo\"] = {\n    \"vigilance_verte\": recommandationsVigilanceCouleur(1),\n    \"vigilance_jaune\": recommandationsVigilanceCouleur(2),\n    \"vigilance_orange\": recommandationsVigilanceCouleur(3),\n    \"vigilance_rouge\": recommandationsVigilanceCouleur(4)\n  }\n  const recommandationsMinIndiceUV= (min_indice_uv) => recommandationsByType[\"indice_uv\"]?.filter(r => r.min_indice_uv === min_indice_uv);\n  recommandations[\"indice_uv\"] = {\n    \"indice_uv_0\": recommandationsMinIndiceUV(0),\n    \"indice_uv_1-2\": recommandationsMinIndiceUV(1),\n    \"indice_uv_3-5\": recommandationsMinIndiceUV(3),\n    \"indice_uv_6-7\": recommandationsMinIndiceUV(6),\n    \"indice_uv_8-10\": recommandationsMinIndiceUV(8),\n    \"indice_uv_11+\": recommandationsMinIndiceUV(11)\n  }\n  recommandations[\"baignades\"] = {\n    \"tous\": recommandationsByType[\"baignades\"],\n  }\n  recommandations[\"radon\"] = {\n    \"tous\": recommandationsByType[\"radon\"],\n  }\n  const phenomenes = {\n    1: \"Vent violent\",\n    2: \"Pluie-Inondation\",\n    3: \"Orages\",\n    4: \"Crues\",\n    5: \"Neige-verglas\",\n    6: \"Canicule\",\n    7: \"Grand Froid\",\n    8: \"Avalanches\",\n    9: \"Vagues-Submersion\"\n  }\n  const criteres = {\n    \"ozone\": \"Pollution à l’ozone\",\n    \"pas_ozone\": \"Pollution au dioxyde d’azote, au dioxyde de soufre ou aux particules fines\",\n    \"qa_bonne\": \"Indice ATMO bon (1) ou moyen (2)\",\n    \"qa_mauvaise\": \"Indice ATMO de dégradé (3) à extrêmement mauvais (6)\",\n    \"qa_evenement\": \"Événement (7)\",\n    \"raep_0\": \"RAEP nul (0)\",\n    \"raep_1-3\": \"RAEP très faible (1), faible (2) ou moyen (3)\",\n    \"raep_4-5\": \"RAEP élevé (4) ou très élevé (5)\",\n    \"vigilance_verte\": \"Vigilance verte\",\n    \"vigilance_jaune\": \"Vigilance jaune\",\n    \"vigilance_orange\": \"Vigilance orange\",\n    \"vigilance_rouge\": \"Vigilance rouge\",\n    \"indice_uv_0\": \"Nul (UV 0)\",\n    \"indice_uv_1-2\": \"Faible (de UV 1 à UV 2)\",\n    \"indice_uv_3-5\": \"Modéré (de UV 3 à UV 5)\",\n    \"indice_uv_6-7\": \"Fort (de UV 6 à UV 7)\",\n    \"indice_uv_8-10\":  \"Très fort (de UV 8 à UV 10)\",\n    \"indice_uv_11+\": \"Extrême (UV 11 et plus)\"\n  }\n  let uniqueCategories = {\n    \"qa_bonne\": [],\n    \"qa_mauvaise\": []\n  }\n  const [filters, setFilters] = useState(Object.keys(types))\n  return (\n    <>\n      <Options>\n        {options.map((option) => (\n          <Option\n            key={option.value}\n            option={option}\n            active={\n              filters.includes(option.value)\n            }\n            onClick={() => {\n              let newFilters = filters\n              if (filters.includes(option.value)) {\n                if (filters.length > 1) {\n                  newFilters = filters.filter(\n                    (value) => value !== option.value\n                  )\n                }\n              } else {\n                newFilters = [...filters, option.value]\n              }\n              setFilters(newFilters)\n            }}\n          />\n        ))}\n      </Options>\n      {\n        Object.keys(types).map((t) => (\n          <section id={t} key={t}>\n            {recommandations[t] && (\n              filters.includes(t) &&\n              <>\n                <Type>{types[t]}</Type>\n                {Object.keys(recommandations[t]).map((c) => (\n                  <section id={t + '-' + c} key={t + '-' + c}>\n                    <Critere>{criteres[c]}</Critere>\n                    {recommandations[t][c]?.map((r, i) => (\n                      <React.Fragment key={t + '-' + c + '-' + i}>\n                        {t === \"indice_atmo\" &&\n                          (r.categorie || (r.categorie = \"Toute catégorie\")) && uniqueCategories[c] && !uniqueCategories[c].includes(r.categorie) && uniqueCategories[c].push(r.categorie) &&\n                          <SousCritere>{r.categorie}</SousCritere>}\n                        {t === \"vigilance_meteo\" && <SousCritere>{phenomenes[r.vigilance_phenomene_ids]}</SousCritere>}\n                        <Recommandation\n                          dangerouslySetInnerHTML={{\n                            __html: r.recommandation\n                          }} />\n                      </React.Fragment>\n                    ))\n                    }\n                  </section>\n                ))}\n              </>\n            )}\n          </section>\n        ))\n      }\n    </>\n  )\n}\n","import { useQuery } from 'react-query'\nimport axios from 'axios'\n\nimport apiUrl from 'utils/apiUrl'\n\nexport default function useRecommandations() {\n  return useQuery(\n    ['recommandations'],\n    () =>\n      axios\n        .get(`${apiUrl}/v1/recommandations`)\n        .then((res) => res.data),\n    {\n      enabled: true,\n      keepPreviousData: true,\n      refetchOnWindowFocus: false,\n    }\n  )\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport styled from 'styled-components'\n\nimport Web from 'components/layout/Web'\nimport Section from 'components/base/Section'\nimport Button from 'components/base/Button'\nimport Content from 'components/Recommandations'\n\nimport apiUrl from 'utils/apiUrl'\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.colors.main};\n  font-size: 3.25rem;\n  margin: 2rem 0;\n`\nconst Introduction = styled.div`\n  background-color: #eef1f7;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  p {\n    margin-bottom: 0;\n  }\n`\n\nexport default function Recommandations(props) {\n\n  const data = useStaticQuery(\n    graphql`\n      query {\n        mdx(slug: { eq: \"recommandations\" }) {\n          body\n          frontmatter {\n            title\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Web title={data.mdx.frontmatter.title}>\n      <Section first medium>\n        <Title>{data.mdx.frontmatter.title}</Title>\n        <Introduction>\n          <MDXRenderer>{data.mdx.body}</MDXRenderer>\n        </Introduction>\n        <Content recommandations={props.pageContext.recommandations}/>\n        <Button.Wrapper center>\n          <Button to={`${apiUrl}/v1/recommandations.csv`}>\n            Télécharger au format CSV\n          </Button>\n        </Button.Wrapper>\n      </Section>\n    </Web>\n  )\n\n}"],"names":["Options","styled","props","theme","mq","small","NoIcon","Type","Critere","SousCritere","colors","text","Recommandation","main","Recommandations","types","options","Object","keys","map","t","push","value","label","icon","IndiceAtmo","Raep","VigilanceMeteo","IndiceUv","objectArray","property","data","useQuery","axios","apiUrl","then","res","enabled","keepPreviousData","refetchOnWindowFocus","recommandations","recommandationsByType","reduce","acc","obj","key","recommandationsOzone","ozone","filter","r","compareCategories","c1","c2","categorie","recommandationsQa","qa","sort","recommandationsMinRaep","min_raep","comparePhenomenes","p1","p2","vigilance_phenomene_ids","recommandationsVigilanceCouleur","vigilance_couleur_id","vigilance_couleur_ids","includes","recommandationsMinIndiceUV","min_indice_uv","phenomenes","criteres","uniqueCategories","useState","filters","setFilters","option","Option","active","onClick","newFilters","length","id","c","i","dangerouslySetInnerHTML","__html","recommandation","Title","Introduction","useStaticQuery","Web","title","mdx","frontmatter","Section","first","medium","MDXRenderer","body","pageContext","Button","center","to"],"sourceRoot":""}